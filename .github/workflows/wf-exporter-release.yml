name: wf-exporter-release

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      
    - name: Build package
      run: poetry build
      
    - name: Get version
      id: version
      run: |
        VERSION=$(poetry version --short)
        echo "tag=v$VERSION" >> $GITHUB_OUTPUT
        echo "wheel=wfexporter-$VERSION-py3-none-any.whl" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Check if release exists
      id: release_check
      run: |
        TAG="v${{ steps.version.outputs.version }}"
        if gh release view $TAG >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "⚠️ Release $TAG already exists!"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "✅ Release $TAG is new"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Extract changelog
      id: changelog
      run: |
        VERSION=$(poetry version --short)
        # Extract the section for this version from CHANGELOG.md
        if [ -f "CHANGELOG.md" ]; then
          awk "/^## \[?$VERSION\]?/{flag=1; next} /^## /{flag=0} flag" CHANGELOG.md > current_changelog.md
          # Check if we found any content
          if [ -s current_changelog.md ]; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
            echo "No changelog entry found for version $VERSION" > current_changelog.md
          fi
        else
          echo "found=false" >> $GITHUB_OUTPUT
          echo "CHANGELOG.md file not found" > current_changelog.md
        fi
        echo "file=current_changelog.md" >> $GITHUB_OUTPUT
      
    - name: Create release
      uses: softprops/action-gh-release@v1
      if: steps.release_check.outputs.exists == 'false'
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: ${{ steps.version.outputs.tag }}
        files: |
          dist/${{ steps.version.outputs.wheel }}
          dist/*.tar.gz
          README.md
          CHANGELOG.md
          config/config.yml
          config/databricks.yml
        body_path: current_changelog.md
        
    - name: Release already exists
      if: steps.release_check.outputs.exists == 'true'
      run: |
        echo "🚨 Release ${{ steps.version.outputs.tag }} already exists!"
        echo "To create a new release:"
        echo "1. Update version: poetry version patch"
        echo "2. Update CHANGELOG.md"
        echo "3. Commit and push to main"
        exit 1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 